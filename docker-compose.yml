version: '3.8'

services:
  aws:
    build:
      context: docker
      dockerfile: localstack.Dockerfile
    environment:
      SERVICES: lambda, apigateway, iam, ec2, sqs, s3, sts
      EDGE_PORT: "45678"
      EXTERNAL_HOSTNAME: ${AWS_HOSTNAME:-localhost}
      DEFAULT_REGION: eu-west-2
      TEST_AWS_ACCOUNT_ID: 123456789012
      DEBUG: "1"
    extra_hosts:
      - "notify.internal:host-gateway"
    networks:
      - di-authentication-api-net
    volumes:
      - ./serverless/lambda/build/distributions:/dist/lambda/
    ports:
      - 45678:45678
    healthcheck:
      test:
        - CMD
        - bash
        - -c
        - awslocal s3 ls terraform-state
      interval: 5s
      timeout: 10s
      start_period: 10s

  redis:
    image: redis:6.0.5-alpine
    healthcheck:
      test: '[[ $$(redis-cli ping 2> /dev/null) == "PONG" ]] || exit 1'
      interval: 5s
      timeout: 1m
    ports:
      - 6379:6379
    networks:
      - di-authentication-api-net

  dynamodb:
    command: "-jar DynamoDBLocal.jar -sharedDb -optimizeDbBeforeStartup -dbPath ."
    working_dir: /home/dynamodblocal
    image: amazon/dynamodb-local:latest
    healthcheck:
      test: curl http://localhost:8000
      interval: 5s
      timeout: 1m
    ports:
      - 8000:8000
    networks:
      - di-authentication-api-net

networks:
  di-authentication-api-net: